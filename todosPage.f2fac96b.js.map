{"mappings":"imBAoBA,IAAAA,EAAAC,EAAA,S,0BAIA,MAAMC,EAAY,cAElBC,EAAAC,WAAWC,iBAAiB,UAK5B,SAAuBC,GACrBA,EAAMC,iBAEN,MAAMC,EAAQF,EAAMG,cAAcC,SAAS,cACrCC,EAAQH,EAAMI,MAAMC,OAE1B,IAAKF,EACH,OAAOG,MAAM,kBAGf,GAAc,KAAVH,EAAc,CAEhB,GADkBI,EAAMC,MAAKC,GAAMA,EAAGC,OAASP,IAE7C,OAAOG,MAAM,a,CAIjB,MAAMK,EAAO,CACXC,GAAIC,KAAKC,MACTJ,KAAMP,GAGRI,EAAMQ,KAAKJ,GAETX,EAAMI,MAAQ,GAEdZ,EAAAwB,QAAgBC,KAAKvB,EAAWa,IAElC,EAAAW,EAAAC,YAAWZ,E,IAhCbZ,EAAAyB,OAAOvB,iBAAiB,SAoCxB,SAA0BC,GAExB,GAA8B,WAA1BA,EAAMuB,OAAOC,SACjB,OAGA,MAAMC,EAAUC,OAAO1B,EAAMuB,OAAOI,QAAQb,IAE1CL,EAAQA,EAAMmB,QAAOjB,GAAMA,EAAGG,KAAOW,IACrC/B,EAAAwB,QAAgBC,KAAKvB,EAAWa,IAClC,EAAAW,EAAAC,YAAWZ,E,IA5Cb,IAAIA,EAAQf,EAAAwB,QAAgBW,KAAKjC,IAAc,IAgD/C,EAAAwB,EAAAC,YAAWZ,E,wFCnDXqB,EAAe,C,KA1BF,CAACC,EAAKzB,KACjB,IACE,MAAM0B,EAAkBC,KAAKC,UAAU5B,GACvC6B,aAAaC,QAAQL,EAAKC,E,CAC1B,MAAOK,GACPC,QAAQD,MAAM,oBAAqBA,EAAME,Q,QAIhCR,IACX,IACE,MAAMC,EAAkBG,aAAaK,QAAQT,GAC7C,OAA2B,OAApBC,OAA2BS,EAAYR,KAAKS,MAAMV,E,CACzD,MAAOK,GACPC,QAAQD,MAAM,oBAAqBA,EAAME,Q,UAI9BR,IACb,IACEI,aAAaQ,WAAWZ,E,CACxB,MAAOM,GACPC,QAAQM,IAAI,sBAAuBP,EAAME,Q,0FCtB7C,IAAAM,EAAAlD,EAAA,S,aAGO,SAASmD,EAAWC,GACvBlD,EAAAyB,OAAO0B,WAAY,EAAAH,EAAAI,cAAaF,E,uCCJ7B,SAASG,EAAaH,GACzB,OAAOA,EAAII,KAAKtC,GACL,wCAEUA,EAAKuC,KAAO,QAAU,OAAOvC,EAAKD,oEAElBC,EAAKC,0EAMrCuC,KAAK,G,mdCXP,MAAMC,EAAaC,SAASC,cAAc,mBACpCC,EAASF,SAASC,cAAc,MAEhCE,EAAUH,SAASC,cAAc,UACjCG,EAAYJ,SAASC,cAAc,YACnCI,EAAYL,SAASC,cAAc,YACnCK,EAAUN,SAASC,cAAc,oBACjCM,EAAYP,SAASC,cAAc,sBACnCO,EAAYR,SAASC,cAAc,qB","sources":["src/js/todoes.js","src/js/localstorageapi.js","src/js/updatelist.js","src/js/markup.js","src/js/refs.js"],"sourcesContent":["//TODO:====================02====================================TODOS============================================================================================\n/**\n  |============================\n  | Список справ todos:\n  | 1 - Напиши скрипт для застосунку todos. Реалізуй методи додавання та видалення щоденних справ.\n  | 2 - Реалізуй перевірку на неможлівість додати пусту справу до списку справ. \n  | Виконуй завдвння послідовно: \n  | - Спочатку знайди елементи у Дом дереві, з якими тобі потрібно працювати.\n  | - Додай слухачі подій з відповідними подіями\n  | - Пропиши три функції, які тобі допоможуть це реалізувати \n  | - Функція обробник на додавання елементів \"onClickSubmit\". Її завдання, зчитати значення з інпуту, виконай за допомогою \"currentTarget.elements\", також не забувай\n  | про метод trim(), який видаляє пробіли. Ця функція повинна робити перевірку на пустий інпут, створювати обьект, додавати до масиву нову todos і чистити інпут. Також\n  | запускати функцію рендера сторінкі.\n  | - Функція \"onBtnClick\", яка буде видаляти todos. Вона повинна знайти id todos, яку потрібно видалити. Значення id можно считати з дата атрибуту за допомогою \n  | \"target.dataset.id\", але не забувай, що там буде рядок і можно використати метод \"parseInt\". Для видалення можно використати метод \"filter\". Після видалення ми \n  | повинні відрендорити сторінку за допомогою функції \"updateList\".\n  | - І сама функція \"updateList\". Ії завдання створити розмітку за допомого метода createElement і setAttribute, додати на сторінку за допомогою метода \"append\". Не \n  | забувай чистити розмітку перед її вставкою.\n  |============================\n*/\nimport localstorageAPI from \"./localstorageapi\";\nimport { updateList } from \"./updatelist\";\nimport {formToDoEl, listEl} from \"./refs\"\n\nconst LOCAL_KEY = 'todos-items'\n\nformToDoEl.addEventListener('submit', onClickSubmit)\nlistEl.addEventListener('click', onBtnDeleteClick)\n\nlet items = localstorageAPI.load(LOCAL_KEY) || [] \n\nfunction onClickSubmit(event) {\n  event.preventDefault();\n\n  const input = event.currentTarget.elements['user-todos']\n  const todos = input.value.trim()\n  \n  if (!todos) {\n    return alert('заповніть поле')\n  }\n\n  if (todos !== '') {\n    const dublicate = items.find(el => el.text === todos)\n    if (dublicate) {\n      return alert('Dublicate!')\n    }\n  }\n\n  const item = {\n    id: Date.now(),\n    text: todos,\n  }\n\n  items.push(item)\n\n    input.value = ''\n    \n    localstorageAPI.save(LOCAL_KEY, items)\n\n  updateList(items)\n\n}\n\nfunction onBtnDeleteClick(event) {\n  \n  if (event.target.nodeName !== 'BUTTON') {\n  return\n  }\n\n  const todosId = Number(event.target.dataset.id)\n  \n    items = items.filter(el => el.id !== todosId)\n    localstorageAPI.save(LOCAL_KEY, items)\n  updateList(items)\n\n}\n\nupdateList(items)","const save = (key, value) => {\n  try {\n    const serializedState = JSON.stringify(value);\n    localStorage.setItem(key, serializedState);\n  } catch (error) {\n    console.error('Set state error: ', error.message);\n  }\n};\n\nconst load = key => {\n  try {\n    const serializedState = localStorage.getItem(key);\n    return serializedState === null ? undefined : JSON.parse(serializedState);\n  } catch (error) {\n    console.error('Get state error: ', error.message);\n  }\n};\n\nconst remove = key => {\n  try {\n    localStorage.removeItem(key);\n  } catch (error) {\n    console.log('Remove item error: ', error.message);\n  }\n};\n\nexport default {\n  save,\n  load,\n  remove,\n};","import { createMarkup } from \"./markup\";\nimport { listEl } from \"./refs\";\n\nexport function updateList(arr) {\n    listEl.innerHTML = createMarkup(arr);  \n}","export function createMarkup(arr) {\n    return arr.map((item) => {\n        return `\n      <li>\n      <span class=\"text${item.done ? ' done' : ''}\">${item.text}</span>\n      <div>\n        <button type=\"button\" data-id=\"${item.id\n            }\" class=\"delete\">Видалити</button>\n      </div>\n      </li>\n    `;\n    })\n        .join('');\n}","\nexport const formToDoEl = document.querySelector('.js-todos__form')\nexport const listEl = document.querySelector('ul')\n\nexport const clockEl = document.querySelector('.clock')\nexport const showBtnEl = document.querySelector('.js-show')\nexport const hideBtnEl = document.querySelector('.js-hide')\nexport const hoursEl = document.querySelector('.js-clock__hours')\nexport const minutesEl = document.querySelector('.js-clock__minutes')\nexport const secondsEl = document.querySelector('.js-clock__seconds')"],"names":["$5enCm","parcelRequire","$2251b737f22c361c$var$LOCAL_KEY","$krGWQ","formToDoEl","addEventListener","event","preventDefault","input","currentTarget","elements","todos","value","trim","alert","$2251b737f22c361c$var$items","find","el","text","item","id","Date","now","push","default","save","$3uJXs","updateList","listEl","target","nodeName","todosId","Number","dataset","filter","load","$3cf0948bcba3b0f3$export$2e2bcd8739ae039","key","serializedState","JSON","stringify","localStorage","setItem","error","console","message","getItem","undefined","parse","removeItem","log","$3huUq","$28b7d2b9a705e6f0$export$ce978267640f61ce","arr","innerHTML","createMarkup","$263aef85a4d00bfb$export$24783e9f3a24abe4","map","done","join","$ee27a4d7c64fc8c4$export$82130d5be648e4ea","document","querySelector","$ee27a4d7c64fc8c4$export$d1b971427e05d4ff","$ee27a4d7c64fc8c4$export$8ec913b293eea598","$ee27a4d7c64fc8c4$export$5836235183a5c442","$ee27a4d7c64fc8c4$export$30743924f9fbfec6","$ee27a4d7c64fc8c4$export$6f1cc08018d3815e","$ee27a4d7c64fc8c4$export$952fd6380205f465","$ee27a4d7c64fc8c4$export$2b40df86116a988e"],"version":3,"file":"todosPage.f2fac96b.js.map"}