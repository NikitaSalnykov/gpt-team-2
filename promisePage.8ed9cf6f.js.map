{"mappings":"AAUAA,SAYA,MAAMC,EAAQC,OAAO,eACrBC,WAAWF,GAAOG,KAAKC,QAAQC,KAAKC,MAAMF,QAAQC,KAwDlDE,eAAe,IAAM,EAAG,KAUxBC,WAAW,CAAC,IAAK,IAAK,IAAK,IAAK","sources":["src/js/promise.js"],"sourcesContent":["//TODO:====================01==========================\n/**\n * Перероби функцію на проміс таким чином, щоб проміс повертав значення\n * через 2 секунди після виклику функції\n */\n\nfunction greet() {\n  return 'hello world';\n}\n\ngreet2();\n\n//TODO:====================02==========================\n\n/**\n * - Використовуй prompt і повертай значення звідти.\n * - Створи функцію, всередині якої буде проміс.\n * Якщо значення не є числом, відхиляй проміс і логіруй \"error\".\n * Якщо значення парне, вирішуй проміс і повертай \"even\" через 1 секунду.\n * Якщо значення не парне, вирішуй проміс і повертай \"odd\" через 2 секунди.\n */\n\nconst value = prompt('Paste value');\ncheckValue(value).then(console.log).catch(console.log);\n\n//TODO:====================03==========================\n\n/**\n\n * Перероби код так, щоб усі дані збиралися\n * одноразово і приходили у вигляді масиву\n */\n\nconst getData = () =>\n  new Promise(res => {\n    setTimeout(() => {\n      const data = 1;\n      console.log(data);\n      res(data);\n    }, 1000);\n  });\n\nconst getNewData = () =>\n  new Promise(res => {\n    setTimeout(() => {\n      const data = 2;\n      console.log(data);\n      res(data);\n    }, 1000);\n  });\n\nconst getAnotherData = () =>\n  new Promise(res => {\n    setTimeout(() => {\n      const data = 3;\n      console.log(data);\n      res(data);\n    }, 1000);\n  });\n\nconst getLastData = () =>\n  new Promise(res => {\n    setTimeout(() => {\n      const data = 4;\n      console.log(data);\n      res(data);\n    }, 1000);\n  });\n\n//TODO:====================04==========================\n/**\n * Функція countWithDelay приймає приймає 3 аргументи:\n * 1) кількість секунд перед тим як спрацює ф-ція logCount\n * 2) скільки разів має відпрацювати logCount\n * 3) затримка між викликами ф-ції\n *\n * logCount повинна логувати кількість викликів\n */\n\ncountWithDelay(3000, 5, 1000);\n\n//TODO:====================05==========================\n/**\n * Функція startTimer повинна логувати кожен елемент масиву один раз на секунду.\n * Коли черга дійде до останнього елемента масиву, продовжити логувати у зворотному порядку\n * поки не дійде до першого елемента, потім зупинити процес.\n */\n\n// Приклад виклику функції startTimer з масивом ['a', \"b\", 'c', \"d\", 'f']\nstartTimer(['a', 'b', 'c', 'd', 'f']);\n"],"names":["greet2","$6ae7f9047be29c20$var$value","prompt","checkValue","then","console","log","catch","countWithDelay","startTimer"],"version":3,"file":"promisePage.8ed9cf6f.js.map"}