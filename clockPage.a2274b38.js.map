{"mappings":"YAAA,IAAMA,GAAW,IAAIC,MAAOC,oBAAoB,IAAG,ECCzBC,SAASC,cAAc,mBAC3BD,SAASC,cAAc,MADtC,IAGMC,EAAUF,SAASC,cAAc,UACjCE,EAAYH,SAASC,cAAc,YACnCG,EAAYJ,SAASC,cAAc,YACnCI,EAAUL,SAASC,cAAc,oBACjCK,EAAYN,SAASC,cAAc,sBACnCM,EAAYP,SAASC,cAAc,sBCTzC,SAASO,EAAOC,GACrB,OAAOC,OAAOD,GAAOE,SAAS,EAAG,E,CCD5B,SAASC,EAAcC,EAAKC,GACjC,OAAOA,EACLD,EAAM,IAAM,GAAKA,EAAM,IAAM,GACzB,EACA,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAGA,EAAM,GAAK,EAAIA,EAAM,GAAK,G,CCJrD,ICkBIE,EDQJC,EAAe,CACbC,KA3BW,SAACC,EAAKT,GACjB,IACE,IAAMU,EAAkBC,KAAKC,UAAUZ,GACvCa,aAAaC,QAAQL,EAAKC,E,CAC1B,MAAOK,GACPC,QAAQD,MAAM,oBAAqBA,EAAME,Q,GAuB3CC,KAnBW,SAAAT,GACX,IACE,IAAMC,EAAkBG,aAAaM,QAAQV,GAC7C,OAA2B,OAApBC,OAA2BU,EAAYT,KAAKU,MAAMX,E,CACzD,MAAOK,GACPC,QAAQD,MAAM,oBAAqBA,EAAME,Q,GAe3CK,OAXa,SAAAb,GACb,IACEI,aAAaU,WAAWd,E,CACxB,MAAOM,GACPC,QAAQQ,IAAI,sBAAuBT,EAAME,Q,ICHvCQ,EAAY,aAKlB,SAASC,IAgBPpB,EAAaqB,aAAY,WACzB,ILvCgCC,EKwCIC,GLxCJD,EKuCZvC,KAAKyC,MLlClB,CACLC,MALYC,KAAKC,MAAML,EAAQ,IAAO,GAAK,GAAM,IAAMxC,EAMvD8C,QALcF,KAAKC,MAAML,EAAO,IAAO,IAAM,GAM7CO,QALcH,KAAKC,MAAML,EAAO,KAAQ,KKqClCG,EAA4BF,EAA5BE,MAAOG,EAAqBL,EAArBK,QAASC,EAAYN,EAAZM,QAExBvC,EAAQwC,YAAcrC,EAAOgC,GAC7BlC,EAAUuC,YAAcrC,EAAOmC,GAC/BpC,EAAUsC,YAAcrC,EAAOoC,GAE/BvC,EAAQyC,QAAQC,MAAQnC,EAAc4B,EAAO,CAAC,SAAgB,SAAgB,UAC9ElC,EAAUwC,QAAQC,MAAQnC,EAAc+B,EAAS,CAAC,UAAkB,UAAkB,WACtFpC,EAAUuC,QAAQC,MAAQnC,EAAcgC,EAAS,CAAC,UAAkB,UAAkB,U,GACrE,KAvBjBI,YAAW,WACX9C,EAAQ+C,UAAUlB,OAAO,aACzB5B,EAAU8C,UAAUC,IAAI,aACxB9C,EAAU6C,UAAUlB,OAAO,Y,GACxB,KAEHf,EAAgBC,KAAKiB,GAAW,E,CAblC/B,EAAUgD,iBAAiB,QAAShB,GACpC/B,EAAU+C,iBAAiB,SAgCb,WACEC,cAAcrC,GACdb,EAAQ+C,UAAUC,IAAI,aACtB/C,EAAU8C,UAAUlB,OAAO,aAC3B3B,EAAU6C,UAAUC,IAAI,aAExBlC,EAAgBC,KAAKiB,GAAW,E,IAG9BlB,EAAgBW,KAAKO,GACvBC,IAEAhC,EAAU8C,UAAUlB,OAAO,Y","sources":["src/js/getTimeComponents.js","src/js/refs.js","src/js/addPad.js","src/js/declensionNum.js","src/js/localstorageapi.js","src/js/clock.js"],"sourcesContent":["const timeZone = new Date().getTimezoneOffset()/60*-1\n\nexport function getTimeComponents(time) {\n  const hours = Math.floor((time / 1000 / 60 / 60) % 24) + timeZone;\n  const minutes = Math.floor(time / 1000 / 60) % 60;\n  const seconds = Math.floor(time / 1000) % 60;\n\n  return {\n    hours,\n    minutes,\n    seconds,\n  };\n}","\nexport const formToDoEl = document.querySelector('.js-todos__form')\nexport const listEl = document.querySelector('ul')\n\nexport const clockEl = document.querySelector('.clock')\nexport const showBtnEl = document.querySelector('.js-show')\nexport const hideBtnEl = document.querySelector('.js-hide')\nexport const hoursEl = document.querySelector('.js-clock__hours')\nexport const minutesEl = document.querySelector('.js-clock__minutes')\nexport const secondsEl = document.querySelector('.js-clock__seconds')","export function addPad(value) {\n  return String(value).padStart(2, 0);\n}","export function declensionNum(num, words) {\n  return words[\n    num % 100 > 4 && num % 100 < 20\n      ? 2\n      : [2, 0, 1, 1, 1, 2][num % 10 < 5 ? num % 10 : 5]\n  ];\n}\n","const save = (key, value) => {\n  try {\n    const serializedState = JSON.stringify(value);\n    localStorage.setItem(key, serializedState);\n  } catch (error) {\n    console.error('Set state error: ', error.message);\n  }\n};\n\nconst load = key => {\n  try {\n    const serializedState = localStorage.getItem(key);\n    return serializedState === null ? undefined : JSON.parse(serializedState);\n  } catch (error) {\n    console.error('Get state error: ', error.message);\n  }\n};\n\nconst remove = key => {\n  try {\n    localStorage.removeItem(key);\n  } catch (error) {\n    console.log('Remove item error: ', error.message);\n  }\n};\n\nexport default {\n  save,\n  load,\n  remove,\n};","//TODO:====================clock==========================\n/**\n * Напиши скрипт який при кліку на кнопку \"Відобразити годинник\", відобразить і запустить годинник. Використовуй Клас \"is-hidden\" для приховування або\n * відображення елементів, цей клас прописаний у стилях. Перед початком ознайомся з html розміткою і подумай як тобі почати логіку. Для початку зроби так,\n * щоб при кліці на кнопку у тебе відобразився інтерфейс годинника , а кнопка змінилась на \" Приховати годинник\". Далі створи функцію для запуску годиника startClock().\n * Для реалізація цього функціоналу тобі дається додаткові функції, для обчисленя годин, хвилин і секунд, які ти можешь отримати з мілісекунд за допомогою цієї фун-ії.\n * Фун-ція \"addPad\", буде добавляти 0, якщо годинник буде мати одне значення. Фун-ція \"declensionNum\", допоможе створити динамічне вираховування годин, хвилин і секунд.\n * Далі тобі знадобиться Фун-ія stopClock(), яка буде зупиняти годиник, коли користувач натисне кнопку \"Приховати годинник\". Тобі потрібно буде приховати і зупинити   * годинник. Тому що, коли годин приховається він не повинен далі рахувати час. Виконай це за допомогою clearInterval(). Також виконай збереження\n * відображення годинника після завантаження сторінки. Тобі в цьому допоможе локальне схожище, імпотруй і використай \"localstorageAPI\", там прописані фун-ії додавання,\n * видалення, та очищення локального сховища. Фун-ії взяті з конспекту. І на останок спробуй свій код зробити модульним.\n */\n\nimport { getTimeComponents } from \"./getTimeComponents\";\nimport { clockEl, showBtnEl, hideBtnEl, hoursEl, minutesEl, secondsEl } from \"./refs\";\nimport { addPad } from \"./addPad\";\nimport { declensionNum } from \"./declensionNum\";\nimport localstorageAPI from \"./localstorageapi\"\n\nlet intervalId;\nconst LOCAL_KEY = 'show-clock'\n\nshowBtnEl.addEventListener('click', onShowBtnClick);\nhideBtnEl.addEventListener('click', onStopBtnClick);\n\nfunction onShowBtnClick() {\n \n  startClock()\n\n  setTimeout(() => {\n  clockEl.classList.remove('is-hidden');\n  showBtnEl.classList.add('is-hidden');\n  hideBtnEl.classList.remove('is-hidden');\n  }, 1000);\n\n  localstorageAPI.save(LOCAL_KEY, true);\n\n}\n\nfunction startClock() {\n\n  intervalId = setInterval(() => {\n  const currentTime = Date.now();\n  const { hours, minutes, seconds } = getTimeComponents(currentTime);\n  \n  hoursEl.textContent = addPad(hours)\n  minutesEl.textContent = addPad(minutes)\n  secondsEl.textContent = addPad(seconds)\n    \n  hoursEl.dataset.title = declensionNum(hours, ['година', 'години', 'годин'])\n  minutesEl.dataset.title = declensionNum(minutes, ['хвилина', 'хвилини', 'хвилин'])\n  secondsEl.dataset.title = declensionNum(seconds, ['секунда', 'секунди', 'секунд'])  \n  }, 1000);\n}\n\nfunction onStopBtnClick() {\n  clearInterval(intervalId);\n  clockEl.classList.add('is-hidden');\n  showBtnEl.classList.remove('is-hidden');\n  hideBtnEl.classList.add('is-hidden');\n\n  localstorageAPI.save(LOCAL_KEY, false);\n}\n\nif (localstorageAPI.load(LOCAL_KEY)) {\n  onShowBtnClick()\n} else {\n  showBtnEl.classList.remove('is-hidden');\n}"],"names":["$456f1fef39595548$var$timeZone","Date","getTimezoneOffset","document","querySelector","$37e33676934ad046$export$8ec913b293eea598","$37e33676934ad046$export$5836235183a5c442","$37e33676934ad046$export$30743924f9fbfec6","$37e33676934ad046$export$6f1cc08018d3815e","$37e33676934ad046$export$952fd6380205f465","$37e33676934ad046$export$2b40df86116a988e","$685e9f39413c16c5$export$683b33b4ba13994c","value","String","padStart","$afed5b3aa17fc796$export$72ccfa8c87f84ff8","num","words","$7a215998b27adb57$var$intervalId","$02d2d96b8459f158$export$2e2bcd8739ae039","save","key","serializedState","JSON","stringify","localStorage","setItem","error","console","message","load","getItem","undefined","parse","remove","removeItem","log","$7a215998b27adb57$var$LOCAL_KEY","$7a215998b27adb57$var$onShowBtnClick","setInterval","time","ref","now","hours","Math","floor","minutes","seconds","textContent","dataset","title","setTimeout","classList","add","addEventListener","clearInterval"],"version":3,"file":"clockPage.a2274b38.js.map"}