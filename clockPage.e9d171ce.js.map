{"mappings":"AAAA,MAAMA,GAAW,IAAIC,MAAOC,oBAAoB,IAAG,ECCzBC,SAASC,cAAc,mBAC3BD,SAASC,cAAc,MADtC,MAGMC,EAAUF,SAASC,cAAc,UACjCE,EAAYH,SAASC,cAAc,YACnCG,EAAYJ,SAASC,cAAc,YACnCI,EAAUL,SAASC,cAAc,oBACjCK,EAAYN,SAASC,cAAc,sBACnCM,EAAYP,SAASC,cAAc,sBCTzC,SAASO,EAAOC,GACrB,OAAOC,OAAOD,GAAOE,SAAS,EAAG,E,CCD5B,SAASC,EAAcC,EAAKC,GACjC,OAAOA,EACLD,EAAM,IAAM,GAAKA,EAAM,IAAM,GACzB,EACA,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAGA,EAAM,GAAK,EAAIA,EAAM,GAAK,G,KCsBrDE,EAAe,C,KA1BF,CAACC,EAAKP,KACjB,IACE,MAAMQ,EAAkBC,KAAKC,UAAUV,GACvCW,aAAaC,QAAQL,EAAKC,E,CAC1B,MAAOK,GACPC,QAAQD,MAAM,oBAAqBA,EAAME,Q,QAIhCR,IACX,IACE,MAAMC,EAAkBG,aAAaK,QAAQT,GAC7C,OAA2B,OAApBC,OAA2BS,EAAYR,KAAKS,MAAMV,E,CACzD,MAAOK,GACPC,QAAQD,MAAM,oBAAqBA,EAAME,Q,UAI9BR,IACb,IACEI,aAAaQ,WAAWZ,E,CACxB,MAAOM,GACPC,QAAQM,IAAI,sBAAuBP,EAAME,Q,ICJ7C,IAAIM,EAMJ,SAASC,IAgBPD,EAAaE,aAAY,KACzB,MAAMC,EAAcnC,KAAKoC,OACnBC,MAAEA,EAAKC,QAAEA,EAAOC,QAAEA,ILxCQC,EKwCsBL,ELnC/C,C,MAJOM,KAAKC,MAAMF,EAAQ,IAAO,GAAK,GAAM,IAAMzC,E,QACzC0C,KAAKC,MAAMF,EAAO,IAAO,IAAM,G,QAC/BC,KAAKC,MAAMF,EAAO,KAAQ,KAHrC,IAA2BA,EK0ChCjC,EAAQoC,YAAcjC,EAAO2B,GAC7B7B,EAAUmC,YAAcjC,EAAO4B,GAC/B7B,EAAUkC,YAAcjC,EAAO6B,GAE/BhC,EAAQqC,QAAQC,MAAQ/B,EAAcuB,EAAO,CAAC,SAAgB,SAAgB,UAC9E7B,EAAUoC,QAAQC,MAAQ/B,EAAcwB,EAAS,CAAC,UAAkB,UAAkB,WACtF7B,EAAUmC,QAAQC,MAAQ/B,EAAcyB,EAAS,CAAC,UAAkB,UAAkB,UAAU,GAC/E,KAvBjBO,YAAW,KACX1C,EAAQ2C,UAAUC,OAAO,aACzB3C,EAAU0C,UAAUE,IAAI,aACxB3C,EAAUyC,UAAUC,OAAO,YAAY,GACpC,KAEH/B,EAAgBiC,KAfA,cAegB,E,CAblC7C,EAAU8C,iBAAiB,QAASlB,GACpC3B,EAAU6C,iBAAiB,SAgCb,WACEC,cAAcpB,GACd5B,EAAQ2C,UAAUE,IAAI,aACtB5C,EAAU0C,UAAUC,OAAO,aAC3B1C,EAAUyC,UAAUE,IAAI,aAExBhC,EAAgBiC,KAzCd,cAyC8B,E,IAG9BjC,EAAgBoC,KA5ChB,cA6CFpB,IAEA5B,EAAU0C,UAAUC,OAAO","sources":["src/js/getTimeComponents.js","src/js/refs.js","src/js/addPad.js","src/js/declensionNum.js","src/js/localstorageapi.js","src/js/clock.js"],"sourcesContent":["const timeZone = new Date().getTimezoneOffset()/60*-1\n\nexport function getTimeComponents(time) {\n  const hours = Math.floor((time / 1000 / 60 / 60) % 24) + timeZone;\n  const minutes = Math.floor(time / 1000 / 60) % 60;\n  const seconds = Math.floor(time / 1000) % 60;\n\n  return {\n    hours,\n    minutes,\n    seconds,\n  };\n}","\nexport const formToDoEl = document.querySelector('.js-todos__form')\nexport const listEl = document.querySelector('ul')\n\nexport const clockEl = document.querySelector('.clock')\nexport const showBtnEl = document.querySelector('.js-show')\nexport const hideBtnEl = document.querySelector('.js-hide')\nexport const hoursEl = document.querySelector('.js-clock__hours')\nexport const minutesEl = document.querySelector('.js-clock__minutes')\nexport const secondsEl = document.querySelector('.js-clock__seconds')","export function addPad(value) {\n  return String(value).padStart(2, 0);\n}","export function declensionNum(num, words) {\n  return words[\n    num % 100 > 4 && num % 100 < 20\n      ? 2\n      : [2, 0, 1, 1, 1, 2][num % 10 < 5 ? num % 10 : 5]\n  ];\n}\n","const save = (key, value) => {\n  try {\n    const serializedState = JSON.stringify(value);\n    localStorage.setItem(key, serializedState);\n  } catch (error) {\n    console.error('Set state error: ', error.message);\n  }\n};\n\nconst load = key => {\n  try {\n    const serializedState = localStorage.getItem(key);\n    return serializedState === null ? undefined : JSON.parse(serializedState);\n  } catch (error) {\n    console.error('Get state error: ', error.message);\n  }\n};\n\nconst remove = key => {\n  try {\n    localStorage.removeItem(key);\n  } catch (error) {\n    console.log('Remove item error: ', error.message);\n  }\n};\n\nexport default {\n  save,\n  load,\n  remove,\n};","//TODO:====================clock==========================\n/**\n * Напиши скрипт який при кліку на кнопку \"Відобразити годинник\", відобразить і запустить годинник. Використовуй Клас \"is-hidden\" для приховування або\n * відображення елементів, цей клас прописаний у стилях. Перед початком ознайомся з html розміткою і подумай як тобі почати логіку. Для початку зроби так,\n * щоб при кліці на кнопку у тебе відобразився інтерфейс годинника , а кнопка змінилась на \" Приховати годинник\". Далі створи функцію для запуску годиника startClock().\n * Для реалізація цього функціоналу тобі дається додаткові функції, для обчисленя годин, хвилин і секунд, які ти можешь отримати з мілісекунд за допомогою цієї фун-ії.\n * Фун-ція \"addPad\", буде добавляти 0, якщо годинник буде мати одне значення. Фун-ція \"declensionNum\", допоможе створити динамічне вираховування годин, хвилин і секунд.\n * Далі тобі знадобиться Фун-ія stopClock(), яка буде зупиняти годиник, коли користувач натисне кнопку \"Приховати годинник\". Тобі потрібно буде приховати і зупинити   * годинник. Тому що, коли годин приховається він не повинен далі рахувати час. Виконай це за допомогою clearInterval(). Також виконай збереження\n * відображення годинника після завантаження сторінки. Тобі в цьому допоможе локальне схожище, імпотруй і використай \"localstorageAPI\", там прописані фун-ії додавання,\n * видалення, та очищення локального сховища. Фун-ії взяті з конспекту. І на останок спробуй свій код зробити модульним.\n */\n\nimport { getTimeComponents } from \"./getTimeComponents\";\nimport { clockEl, showBtnEl, hideBtnEl, hoursEl, minutesEl, secondsEl } from \"./refs\";\nimport { addPad } from \"./addPad\";\nimport { declensionNum } from \"./declensionNum\";\nimport localstorageAPI from \"./localstorageapi\"\n\nlet intervalId;\nconst LOCAL_KEY = 'show-clock'\n\nshowBtnEl.addEventListener('click', onShowBtnClick);\nhideBtnEl.addEventListener('click', onStopBtnClick);\n\nfunction onShowBtnClick() {\n \n  startClock()\n\n  setTimeout(() => {\n  clockEl.classList.remove('is-hidden');\n  showBtnEl.classList.add('is-hidden');\n  hideBtnEl.classList.remove('is-hidden');\n  }, 1000);\n\n  localstorageAPI.save(LOCAL_KEY, true);\n\n}\n\nfunction startClock() {\n\n  intervalId = setInterval(() => {\n  const currentTime = Date.now();\n  const { hours, minutes, seconds } = getTimeComponents(currentTime);\n  \n  hoursEl.textContent = addPad(hours)\n  minutesEl.textContent = addPad(minutes)\n  secondsEl.textContent = addPad(seconds)\n    \n  hoursEl.dataset.title = declensionNum(hours, ['година', 'години', 'годин'])\n  minutesEl.dataset.title = declensionNum(minutes, ['хвилина', 'хвилини', 'хвилин'])\n  secondsEl.dataset.title = declensionNum(seconds, ['секунда', 'секунди', 'секунд'])  \n  }, 1000);\n}\n\nfunction onStopBtnClick() {\n  clearInterval(intervalId);\n  clockEl.classList.add('is-hidden');\n  showBtnEl.classList.remove('is-hidden');\n  hideBtnEl.classList.add('is-hidden');\n\n  localstorageAPI.save(LOCAL_KEY, false);\n}\n\nif (localstorageAPI.load(LOCAL_KEY)) {\n  onShowBtnClick()\n} else {\n  showBtnEl.classList.remove('is-hidden');\n}"],"names":["$133996885ceb54a3$var$timeZone","Date","getTimezoneOffset","document","querySelector","$ee27a4d7c64fc8c4$export$8ec913b293eea598","$ee27a4d7c64fc8c4$export$5836235183a5c442","$ee27a4d7c64fc8c4$export$30743924f9fbfec6","$ee27a4d7c64fc8c4$export$6f1cc08018d3815e","$ee27a4d7c64fc8c4$export$952fd6380205f465","$ee27a4d7c64fc8c4$export$2b40df86116a988e","$f6e65e5fdac7ac2a$export$683b33b4ba13994c","value","String","padStart","$2dbdb4b87cb29d9c$export$72ccfa8c87f84ff8","num","words","$3cf0948bcba3b0f3$export$2e2bcd8739ae039","key","serializedState","JSON","stringify","localStorage","setItem","error","console","message","getItem","undefined","parse","removeItem","log","$59fa8b5735423a4b$var$intervalId","$59fa8b5735423a4b$var$onShowBtnClick","setInterval","currentTime","now","hours","minutes","seconds","time","Math","floor","textContent","dataset","title","setTimeout","classList","remove","add","save","addEventListener","clearInterval","load"],"version":3,"file":"clockPage.e9d171ce.js.map"}